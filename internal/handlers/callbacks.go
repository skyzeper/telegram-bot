package handlers

import (
	"context"
	"database/sql"
	"fmt"
	"strings"

	"github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/skyzeper/telegram-bot/internal/menus"
	"github.com/skyzeper/telegram-bot/internal/state"
)

func HandleCallback(ctx context.Context, bot *tgbotapi.BotAPI, callback *tgbotapi.CallbackQuery, db *sql.DB) {
	handler := NewHandler(db, state.NewStateManager())
	chatID := callback.Message.Chat.ID
	data := callback.Data

	// –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã UX
	if callback.Message != nil {
		bot.Send(tgbotapi.NewDeleteMessage(chatID, callback.Message.MessageID))
	}

	currentState := handler.states.Get(chatID)
	switch {
	case data == "action_construction_materials":
		handler.orders.StartOrder(ctx, chatID, "construction_materials")
		bot.Send(tgbotapi.NewMessage(chatID, "–®–∞–≥ 1/9: –í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –∑–∞–∫–∞–∑–∞ —Å—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"))
	case data == "action_waste_removal":
		handler.orders.StartOrder(ctx, chatID, "waste_removal")
		msgConfig := tgbotapi.NewMessage(chatID, "–®–∞–≥ 1/9: –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é")
		msgConfig.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ú—É—Å–æ—Ä –∏ —Ö–ª–∞–º", "subcategory_trash"),
				tgbotapi.NewInlineKeyboardButtonData("–°—Ç–∞—Ä–∞—è –º–µ–±–µ–ª—å", "subcategory_furniture"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ú–µ—Ç–∞–ª–ª", "subcategory_metal"),
				tgbotapi.NewInlineKeyboardButtonData("–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º—É—Å–æ—Ä", "subcategory_construction_waste"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ü–æ–∫—Ä—ã—à–∫–∏", "subcategory_tires"),
				tgbotapi.NewInlineKeyboardButtonData("–ü–∏—â–µ–≤—ã–µ –æ—Ç—Ö–æ–¥—ã", "subcategory_food_waste"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–î—Ä—É–≥–æ–µ", "subcategory_other_waste"),
				tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "action_back"),
			),
		)
		bot.Send(msgConfig)
	case data == "action_demolition":
		handler.orders.StartOrder(ctx, chatID, "demolition")
		msgConfig := tgbotapi.NewMessage(chatID, "–®–∞–≥ 1/7: –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é")
		msgConfig.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ü–æ–ª—ã", "subcategory_floors"),
				tgbotapi.NewInlineKeyboardButtonData("–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞", "subcategory_plumbing"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–°—Ç–µ–Ω—ã", "subcategory_walls"),
				tgbotapi.NewInlineKeyboardButtonData("–î–≤–µ—Ä–∏ –∏ –æ–∫–Ω–∞", "subcategory_doors_windows"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–µ–º–æ–Ω—Ç—É", "subcategory_repair_prep"),
				tgbotapi.NewInlineKeyboardButtonData("–°–Ω–æ—Å –¥–æ–º–æ–≤", "subcategory_house_demolition"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–î—Ä—É–≥–æ–µ", "subcategory_other_demolition"),
				tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "action_back"),
			),
		)
		bot.Send(msgConfig)
	case data == "action_contact_operator":
		msgConfig := tgbotapi.NewMessage(chatID, "üìû –ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è?")
		msgConfig.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("–°–∞–º –ø–æ–∑–≤–æ–Ω—é", "chat_call_me"),
				tgbotapi.NewInlineKeyboardButtonData("–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ", "chat_call_you"),
				tgbotapi.NewInlineKeyboardButtonData("–í —á–∞—Ç–µ", "chat_text"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "action_back"),
			),
		)
		bot.Send(msgConfig)
	case data == "action_referral":
		link := handler.referral.GenerateLink(chatID)
		msgConfig := tgbotapi.NewMessage(chatID, fmt.Sprintf("üîó –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏—Ç–µ 500 —Ä—É–±. –∑–∞ –∑–∞–∫–∞–∑ –æ—Ç 10,000 —Ä—É–±.!\n–í–∞—à–∞ —Å—Å—ã–ª–∫–∞: %s", link))
		msgConfig.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üì∑ –°–æ–∑–¥–∞—Ç—å QR-–∫–æ–¥", "referral_qr"),
				tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "action_back"),
			),
		)
		bot.Send(msgConfig)
	case strings.HasPrefix(data, "subcategory_"):
		if currentState.Module == "create_order" {
			currentState.Data["subcategory"] = strings.TrimPrefix(data, "subcategory_")
			currentState.Step = 2
			currentState.TotalSteps = 9
			if currentState.Data["category"] == "demolition" {
				currentState.TotalSteps = 7
			}
			handler.states.Set(chatID, currentState)
			bot.Send(tgbotapi.NewMessage(chatID, fmt.Sprintf("–®–∞–≥ 2/%d: –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è", currentState.TotalSteps)))
		}
	case data == "photo_add":
		if currentState.Module == "create_order" {
			bot.Send(tgbotapi.NewMessage(chatID, fmt.Sprintf("–®–∞–≥ 3/%d: –ó–∞–≥—Ä—É–∑–∏—Ç–µ –µ—â—ë —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ", currentState.TotalSteps)))
		}
	case data == "photo_confirm":
		if currentState.Module == "create_order" {
			currentState.Step = 5
			currentState.TotalSteps = currentState.TotalSteps
			handler.states.Set(chatID, currentState)
			msgConfig := tgbotapi.NewMessage(chatID, fmt.Sprintf("–®–∞–≥ 5/%d: –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É", currentState.TotalSteps))
			msgConfig.ReplyMarkup = handler.orders.DateKeyboard()
			bot.Send(msgConfig)
		}
	case data == "photo_cancel":
		if currentState.Module == "create_order" {
			handler.states.Clear(chatID)
			msgConfig := tgbotapi.NewMessage(chatID, "–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ")
			msgConfig.ReplyMarkup = menus.UserMenu()
			bot.Send(msgConfig)
		}
	case data == "phone_contact" || data == "chat_contact":
		if currentState.Module == "create_order" || currentState.Module == "chat" {
			msgConfig := tgbotapi.NewMessage(chatID, "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞")
			msgConfig.ReplyMarkup = tgbotapi.NewReplyKeyboard(
				tgbotapi.NewKeyboardButtonRow(
					tgbotapi.NewKeyboardButtonContact("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä"),
				),
			)
			bot.Send(msgConfig)
		}
	case data == "chat_call_me":
		bot.Send(tgbotapi.NewMessage(chatID, "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç–µ: +7(978)-959-70-77"))
	case data == "chat_call_you":
		handler.states.Set(chatID, state.State{
			Module: "chat",
			Data:   map[string]interface{}{},
		})
		msgConfig := tgbotapi.NewMessage(chatID, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ üìû")
		msgConfig.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", "chat_contact"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "action_back"),
			),
		)
		bot.Send(msgConfig)
	case data == "chat_text":
		handler.states.Set(chatID, state.State{
			Module: "chat",
			Data:   map[string]interface{}{},
		})
		bot.Send(tgbotapi.NewMessage(chatID, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É"))
	case data == "action_back":
		user, _ := handler.users.GetUser(ctx, chatID)
		var menu tgbotapi.InlineKeyboardMarkup
		switch user.Role {
		case "user":
			menu = menus.UserMenu()
		case "operator":
			menu = menus.OperatorMenu()
		case "main_operator":
			menu = menus.MainOperatorMenu()
		case "driver":
			menu = menus.DriverMenu()
		case "loader":
			menu = menus.LoaderMenu()
		case "owner":
			menu = menus.OwnerMenu()
		}
		handler.states.Clear(chatID)
		msgConfig := tgbotapi.NewMessage(chatID, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ")
		msgConfig.ReplyMarkup = menu
		bot.Send(msgConfig)
	default:
		bot.Send(tgbotapi.NewMessage(chatID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ"))
	}

	// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback
	bot.Send(tgbotapi.NewCallback(callback.ID, ""))
}
