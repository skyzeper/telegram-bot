package chat

import (
	"context"
	"database/sql"
	"fmt"

	"bot/internal/models"
	"bot/internal/utils"
	"github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type Service struct {
	repo *Repository
}

func NewService(db *sql.DB) *Service {
	return &Service{
		repo: NewRepository(db),
	}
}

func (s *Service) HandleChat(ctx context.Context, msg *tgbotapi.Message, bot *tgbotapi.BotAPI) {
	if msg.Text == "–°–∞–º –ø–æ–∑–≤–æ–Ω—é" {
		bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç–µ: +7(978)-959-70-77"))
		return
	}
	if msg.Text == "–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ" {
		bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ üìû", tgbotapi.NewReplyKeyboard(
			tgbotapi.NewKeyboardButtonRow(
				tgbotapi.NewKeyboardButtonContact("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä"),
			),
		)))
		return
	}
	if msg.Contact != nil || utils.FormatPhone(msg.Text) != "" {
		phone := msg.Contact.PhoneNumber
		if phone == "" {
			phone = utils.FormatPhone(msg.Text)
		}
		s.repo.SaveMessage(ctx, &models.Message{
			UserID:     msg.Chat.ID,
			Message:    fmt.Sprintf("–ö–ª–∏–µ–Ω—Ç %d –ø—Ä–æ—Å–∏—Ç –ø–æ–∑–≤–æ–Ω–∏—Ç—å: %s", msg.Chat.ID, phone),
			IsFromUser: true,
		})
		bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–û–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏", tgbotapi.ReplyKeyboardRemove{}))
		return
	}
	s.repo.SaveMessage(ctx, &models.Message{
		UserID:     msg.Chat.ID,
		Message:    msg.Text,
		IsFromUser: true,
	})
	bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É"))
}
